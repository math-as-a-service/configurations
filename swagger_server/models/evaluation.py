# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import FlaskModel
from swagger_server import util


class Evaluation(FlaskModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, expression_id: int=None, result_id: int=None, status: int=None):  # noqa: E501
        """Evaluation - a model defined in Swagger

        :param id: The id of this Evaluation.  # noqa: E501
        :type id: int
        :param expression_id: The expression_id of this Evaluation.  # noqa: E501
        :type expression_id: int
        :param result_id: The result_id of this Evaluation.  # noqa: E501
        :type result_id: int
        :param status: The status of this Evaluation.  # noqa: E501
        :type status: int
        """
        self.swagger_types = {
            'id': int,
            'expression_id': int,
            'result_id': int,
            'status': int
        }

        self.attribute_map = {
            'id': 'id',
            'expression_id': 'expression_id',
            'result_id': 'result_id',
            'status': 'status'
        }

        self._id = id
        self._expression_id = expression_id
        self._result_id = result_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Evaluation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Evaluation of this Evaluation.  # noqa: E501
        :rtype: Evaluation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Evaluation.


        :return: The id of this Evaluation.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Evaluation.


        :param id: The id of this Evaluation.
        :type id: int
        """

        self._id = id

    @property
    def expression_id(self) -> int:
        """Gets the expression_id of this Evaluation.


        :return: The expression_id of this Evaluation.
        :rtype: int
        """
        return self._expression_id

    @expression_id.setter
    def expression_id(self, expression_id: int):
        """Sets the expression_id of this Evaluation.


        :param expression_id: The expression_id of this Evaluation.
        :type expression_id: int
        """

        self._expression_id = expression_id

    @property
    def result_id(self) -> int:
        """Gets the result_id of this Evaluation.


        :return: The result_id of this Evaluation.
        :rtype: int
        """
        return self._result_id

    @result_id.setter
    def result_id(self, result_id: int):
        """Sets the result_id of this Evaluation.


        :param result_id: The result_id of this Evaluation.
        :type result_id: int
        """

        self._result_id = result_id

    @property
    def status(self) -> int:
        """Gets the status of this Evaluation.


        :return: The status of this Evaluation.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this Evaluation.


        :param status: The status of this Evaluation.
        :type status: int
        """

        self._status = status
