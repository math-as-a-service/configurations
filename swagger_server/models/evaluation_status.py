# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EvaluationStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, label: str=None):  # noqa: E501
        """EvaluationStatus - a model defined in Swagger

        :param id: The id of this EvaluationStatus.  # noqa: E501
        :type id: int
        :param label: The label of this EvaluationStatus.  # noqa: E501
        :type label: str
        """
        self.swagger_types = {
            'id': int,
            'label': str
        }

        self.attribute_map = {
            'id': 'id',
            'label': 'label'
        }

        self._id = id
        self._label = label

    @classmethod
    def from_dict(cls, dikt) -> 'EvaluationStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EvaluationStatus of this EvaluationStatus.  # noqa: E501
        :rtype: EvaluationStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this EvaluationStatus.


        :return: The id of this EvaluationStatus.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this EvaluationStatus.


        :param id: The id of this EvaluationStatus.
        :type id: int
        """

        self._id = id

    @property
    def label(self) -> str:
        """Gets the label of this EvaluationStatus.


        :return: The label of this EvaluationStatus.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label: str):
        """Sets the label of this EvaluationStatus.


        :param label: The label of this EvaluationStatus.
        :type label: str
        """

        self._label = label
