# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401
from peewee import *

from swagger_server.models.base_model_ import Model as FlaskModel
from swagger_server import util


class Expression(Model, FlaskModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id = IntegerField()
    created = DateTimeField(default=datetime.datetime.now)
    updated = DateTimeField(default=datetime.datetime.now)

    def __init__(self, id: int=None, created: datetime=None, updated: datetime=None):  # noqa: E501
        """Expression - a model defined in Swagger

        :param id: The id of this Expression.  # noqa: E501
        :type id: int
        :param created: The created of this Expression.  # noqa: E501
        :type created: datetime
        :param updated: The updated of this Expression.  # noqa: E501
        :type updated: datetime
        """
        self.swagger_types = {
            'id': int,
            'created': datetime,
            'updated': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'created': 'created',
            'updated': 'updated'
        }

        self._id = id
        self._created = created
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt) -> 'Expression':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Expression of this Expression.  # noqa: E501
        :rtype: Expression
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Expression.


        :return: The id of this Expression.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Expression.


        :param id: The id of this Expression.
        :type id: int
        """

        self._id = id

    @property
    def created(self) -> datetime:
        """Gets the created of this Expression.


        :return: The created of this Expression.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this Expression.


        :param created: The created of this Expression.
        :type created: datetime
        """

        self._created = created

    @property
    def updated(self) -> datetime:
        """Gets the updated of this Expression.


        :return: The updated of this Expression.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated: datetime):
        """Sets the updated of this Expression.


        :param updated: The updated of this Expression.
        :type updated: datetime
        """

        self._updated = updated
